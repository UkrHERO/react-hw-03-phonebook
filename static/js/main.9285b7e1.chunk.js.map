{"version":3,"sources":["components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","currentTarget","value","this","type","onChange","pattern","title","required","Component","Filter","ContactList","contacts","deleteContact","map","contact","onClick","id","App","filter","addContact","nanoid","find","cont","alert","changeFilter","getContacts","normalizedFilter","toLowerCase","includes","prevState","localStorage","getItem","parsedContacts","JSON","parse","newContacts","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9285b7e1.chunk.js","sourcesContent":["import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    // if (name === \"name\") this.setState({ name: value });\r\n    // if (name === \"number\") this.setState({ number: value });\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} name=\"find\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <p>\r\n            {contact.name}: {contact.number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => deleteContact(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    const newContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n    if (newContacts !== prevContacts)\r\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: nanoid(3),\r\n      name,\r\n      number,\r\n    };\r\n    const check = this.state.contacts.find(cont => cont.name === contact.name);\r\n    if (check) {\r\n      return alert(`${contact.name} is already in contacts.`);\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n  render() {\r\n    const filteredContacts = this.getContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__32-f5\"};"],"sourceRoot":""}